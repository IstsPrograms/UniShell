using OperManager;
using Cmds;
using Hydrium;
using Logs;
using ExecuteEngines;
var logger = new Logger();
logger.Log("Log Created, 7str");
Engine.OutputSysNE("[OPERTURE] Logger created");
string cPath = $"C:/Users/{Environment.UserName}/";
logger.Log("Configuring path, 10str");
Environment.CurrentDirectory = cPath;
Engine.OutputSysNE("[PCONF] Path Configured");
Delegate[] cmds = { CommandsR.cd, CommandsR.dir, CommandsR.cls, CommandsR.ping, CommandsR.shutdown, CommandsR.fget, CommandsR.sys, CommandsR.echo, CommandsR.getd, CommandsR.to, CommandsR.mkzip, CommandsR.unzip, CommandsR.rm, CommandsR.write, CommandsR.mkdir, CommandsR.mkfile, CommandsR.help, CommandsR.contacts, CommandsR.ls, CommandsR.clear, CommandsR.about, CommandsR.date, CommandsR.gc_collect};
Action[] services = { };
Delegate[] engines = { Engines.exe, Engines.bat};
logger.Log("Creating Operture, 16str");
Operture invokeMgr = new Operture(cmds, services, engines, logger);
logger.Log("Launching MainCmd, 18str");
await invokeMgr.MainCmd();
Console.ReadKey();